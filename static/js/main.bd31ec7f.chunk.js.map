{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","text","color","onClick","className","style","backgroundColor","defaultProps","alert","Header","showAdd","toggleAddTask","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","day","Tasks","tasks","map","AddTask","onAddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","checked","App","showAddTask","setShowAddTask","setTasks","newTask","Math","floor","random","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd31ec7f.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\n\r\nexport const Button = ({text, color, onClick}) => {\r\n\r\n    return (\r\n        <button className='btn' style={{backgroundColor: color}}\r\n            onClick={onClick}\r\n        >{text}</button>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'blue',\r\n    text: 'Hello',\r\n    onClick: () => {\r\n        alert('wassup');\r\n    }\r\n}\r\n\r\nButton.propTypes = {\r\n    color: PropTypes.string,\r\n    text: PropTypes.string,\r\n    onClick: PropTypes.func\r\n}","import PropTypes from \"prop-types\";\r\nimport { Button } from \"./Button\";\r\n\r\nexport const Header = ({showAdd, toggleAddTask}) => {\r\n\r\n    return (\r\n        <header className='header'>\r\n            <h1>Task Tracker</h1>\r\n            <Button text={showAdd ? 'Close' : 'Add'} \r\n                color={showAdd ? 'red' : 'green'}\r\n                onClick={toggleAddTask}></Button>\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string\r\n}","import { FaTimes } from \"react-icons/fa\";\r\n\r\nexport const Task = ({ task, onDelete, onToggle }) => {\r\n\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)}>\r\n            <h3>\r\n                {task.text}\r\n                <FaTimes style={{ color: 'red' }} onClick={() => onDelete(task.id)}></FaTimes>\r\n            </h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}","import { Task } from \"./Task\";\r\n\r\nexport const Tasks = ({tasks, onDelete, onToggle}) => {\r\n    return (\r\n        <>\r\n            {tasks.map(task => \r\n                <Task key={task.id} \r\n                    task={task} \r\n                    onDelete={onDelete}\r\n                    onToggle={onToggle}></Task>\r\n            )}\r\n        </>\r\n    )\r\n}","import { useState } from \"react\";\r\n\r\nexport const AddTask = ({onAddTask}) => {\r\n    \r\n    const [text, setText] = useState('');\r\n    const [day, setDay] = useState('');\r\n    const [reminder, setReminder] = useState(false);\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const newTask = { text, day, reminder};\r\n        onAddTask(newTask);\r\n        setText('');\r\n        setDay('');\r\n        setReminder(false);\r\n    }\r\n\r\n    return (\r\n        <form className=\"add-form\" onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <label className=\"label\">Task</label>\r\n                <input className='input' type='text' placeholder='Add Task'\r\n                    value={text} onChange={(e) => setText(e.target.value)}></input>\r\n            </div>\r\n            <div className='form-control'>\r\n                <label className=\"label\">Day & Time</label>\r\n                <input className='input' type='text' placeholder='Add Day & Time'\r\n                    value={day} onChange={(e) => setDay(e.target.value)}></input>\r\n            </div>\r\n            <div className='form-control-check'>\r\n                <label className=\"label\">Reminder</label>\r\n                <input className='input' type='checkbox' checked={reminder}\r\n                    value={reminder} onChange={(e) => setReminder(e.target.checked)}></input>\r\n            </div>\r\n            <button type='submit' className='btn btn-block'>Save Task</button>\r\n        </form>\r\n    )\r\n}","import './App.css';\nimport { Header } from \"./components/Header\";\nimport { Tasks } from \"./components/Tasks\";\nimport { AddTask } from \"./components/AddTask\";\nimport { useState } from \"react\";\n\nfunction App() {\n\n  const [showAddTask, setShowAddTask] = useState(false);\n\n  const [tasks, setTasks] = useState([\n    {\n      \"id\": 1,\n      \"text\": \"Doctors Appointment\",\n      \"day\": \"May 5th at 2:30pm\",\n      \"reminder\": true\n    },\n    {\n      \"id\": 2,\n      \"text\": \"Meeting at School\",\n      \"day\": \"May 6th at 1:30pm\",\n      \"reminder\": false\n    },\n    {\n      \"id\": 3,\n      \"text\": \"Food Shopping\",\n      \"day\": \"May 7th at 12:30pm\",\n      \"reminder\": false\n    },\n    {\n      \"text\": \"Complete project\",\n      \"day\": \"Today\",\n      \"reminder\": true,\n      \"id\": 4\n    },\n    {\n      \"text\": \"Interview Today\",\n      \"day\": \"Friday\",\n      \"reminder\": true,\n      \"id\": 5\n    }\n  ]);\n\n  //show/hide Add Task\n  const updateAddTaskState = () => {\n    setShowAddTask(!showAddTask);\n  }\n\n  // Add Task\n  const addTask = (newTask) => {\n    const id = Math.floor(Math.random()* 1000 + 1) + 1;\n    newTask.id = id;\n    setTasks([...tasks, newTask]);\n    setShowAddTask(!showAddTask);\n  }\n\n  // On Delete Task\n  const onDelete = (id) => {\n    setTasks(tasks.filter(task => task.id !== id));\n  }\n\n  // Update reminder on Toggle\n  const onToggleReminder = id => {\n    setTasks(tasks.map(task => {\n      if (task.id === id) task.reminder = !task.reminder;\n      return task;\n    }));\n  }\n\n  return (\n    <div className=\"container\">\n      <Header showAdd={showAddTask}\n        toggleAddTask={updateAddTaskState}/>\n      {showAddTask && <AddTask onAddTask={addTask}/>}\n      {!showAddTask && (tasks.length === 0 ? \n        'No Tasks to Show' : \n        <Tasks tasks={tasks} \n          onDelete={onDelete}\n          onToggle={onToggleReminder}/>)}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}